{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAe,CACnBC,WAAYC,SAASC,cAAc,qBACnCC,UAAWF,SAASC,cAAc,oBAClCE,YAAaH,SAASC,cAAc,sBACpCG,aAAcJ,SAASC,cAAc,uBACrCI,KAAML,SAASC,cAAc,UA2C/B,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAlDbV,EAAaO,KAAKW,iBAAiB,UAAWC,IAC5CA,EAAIC,iBAEJ,MAAMC,EAAaC,OAAOtB,EAAaC,WAAWsB,OAC5CC,EAAOF,OAAOtB,EAAaI,UAAUmB,OACrCE,EAASH,OAAOtB,EAAaK,YAAYkB,OAEzCG,EAAW,GAEXC,EAAoB,GACpBC,EAAmB,GAEzB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAQI,IAAK,CAC/B,MAGMC,EAAUtB,EAHCqB,EAAI,EACPR,EAAaG,EAAOK,GAIlCC,EACGC,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAAlC,GAASmC,OAAOC,QAAQ,uBAAqBzB,QAAiBC,OAC5DiB,EAAgBQ,KAAK,C,SAAE1B,E,MAAUC,GAAQ,IAE5C0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAAlC,GAASmC,OAAOI,QAAQ,sBAAoB5B,QAAeC,OAC3DkB,EAAiBO,KAAK,C,SAAE1B,E,MAAUC,GAAQ,IAG9CgB,EAASS,KAAKL,E,CAGhBnB,QAAQ2B,IAAIZ,GACTK,MAAK,KACJ/B,EAAaO,KAAKgC,OAAO,IAE1BH,OAAOI,IACNC,QAAQD,MAAMA,EAAM,GACpB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formElements = {\n  delayInput: document.querySelector('input[name=delay]'),\n  stepInput: document.querySelector('input[name=step]'),\n  amountInput: document.querySelector('input[name=amount]'),\n  submitButton: document.querySelector('button[type=submit]'),\n  form: document.querySelector('.form'),\n};\n\nformElements.form.addEventListener('submit', (evt) => {\n  evt.preventDefault();\n\n  const firstDelay = Number(formElements.delayInput.value);\n  const step = Number(formElements.stepInput.value);\n  const amount = Number(formElements.amountInput.value);\n\n  const promises = [];\n\n  const fulfilledPromises = [];\n  const rejectedPromises = [];\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const delay = firstDelay + step * i;\n\n    const promise = createPromise(position, delay);\n\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        fulfilledPromises.push({ position, delay });\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        rejectedPromises.push({ position, delay });\n      });\n\n    promises.push(promise);\n  }\n\n  Promise.all(promises)\n    .then(() => {\n      formElements.form.reset();\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formElements","delayInput","document","querySelector","stepInput","amountInput","submitButton","form","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","firstDelay","Number","value","step","amount","promises","fulfilledPromises","rejectedPromises","i","promise","then","$parcel$interopDefault","Notify","success","push","catch","failure","all","reset","error","console"],"version":3,"file":"03-promises.8c19b89f.js.map"}